$date
	Tue Sep 17 23:05:53 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 1 ! result $end
$var reg 8 " op1 [7:0] $end
$var reg 8 # op2 [7:0] $end
$scope module SSC0 $end
$var wire 1 $ EQ1234567 $end
$var wire 1 % EQ234567 $end
$var wire 1 & EQ34567 $end
$var wire 1 ' EQ4567 $end
$var wire 1 ( EQ567 $end
$var wire 1 ) EQ67 $end
$var wire 1 * NOTb0 $end
$var wire 1 + NOTb1 $end
$var wire 1 , NOTb2 $end
$var wire 1 - NOTb3 $end
$var wire 1 . NOTb4 $end
$var wire 1 / NOTb5 $end
$var wire 1 0 NOTb6 $end
$var wire 1 1 NOTb7 $end
$var wire 1 2 a0ANDNb0 $end
$var wire 1 3 a1ANDNb1 $end
$var wire 1 4 a1EQb1 $end
$var wire 1 5 a2ANDNb2 $end
$var wire 1 6 a2EQb2 $end
$var wire 1 7 a3ANDNb3 $end
$var wire 1 8 a3EQb3 $end
$var wire 1 9 a4ANDNb4 $end
$var wire 1 : a4EQb4 $end
$var wire 1 ; a5ANDNb5 $end
$var wire 1 < a5EQb5 $end
$var wire 1 = a6ANDNb6 $end
$var wire 1 > a6EQb6 $end
$var wire 1 ? a7ANDNb7 $end
$var wire 1 @ a7EQb7 $end
$var wire 8 A operand1 [7:0] $end
$var wire 8 B operand2 [7:0] $end
$var reg 1 ! result $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 C i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 C
b11001100 B
b11001101 A
1@
0?
1>
0=
1<
0;
1:
09
18
07
16
05
14
03
12
01
00
1/
1.
0-
0,
1+
1*
1)
1(
1'
1&
1%
1$
b11001100 #
b11001101 "
1!
$end
#5
0!
0&
0$
05
0'
0%
0(
0)
02
0;
06
0*
1,
1-
10
0<
0@
b10000001 #
b10000001 B
b100100 "
b100100 A
b1 C
#10
04
0>
1@
0+
0/
00
11
16
08
b1100011 #
b1100011 B
b1001 "
b1001 A
b10 C
#15
14
18
1<
1>
0@
1+
0,
0-
1/
10
01
b10001101 #
b10001101 B
b1101 "
b1101 A
b11 C
#20
1!
1=
04
06
0:
1@
1*
0+
1,
1-
0.
11
0<
0>
b10010 #
b10010 B
b1100101 "
b1100101 A
b100 C
#25
0!
1'
1(
1)
0=
14
08
1:
0*
1+
0,
0-
1.
1<
1>
b1101 #
b1101 B
b1 "
b1 A
b101 C
